package com.ras.form.popup;

import com.ras.database.DatabaseOperation;
import com.ras.entity.Category;
import com.ras.entity.Product;
import com.ras.entity.Region;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.SwingWorker;
import raven.toast.Notifications;

public class CreateProduct extends javax.swing.JPanel {

    /**
     * Creates new form CreateTable
     */
    public CreateProduct() {
        initComponents();
        comboBoxModel = (DefaultComboBoxModel) comboCategory.getModel();
        setComboBox();
        initializeComboBoxRenderer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboRegion = new com.ras.swing.combobox.RComboBox();
        lbName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lbDescription = new javax.swing.JLabel();
        lbCategory = new javax.swing.JLabel();
        comboCategory = new com.ras.swing.combobox.CComboBox();
        lbDescription1 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();

        lbName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbName.setText("Name");

        lbDescription.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbDescription.setText("Description");

        lbCategory.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbCategory.setText("Category");

        lbDescription1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbDescription1.setText("Price");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        txtDescription.setColumns(20);
        txtDescription.setLineWrap(true);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbCategory)
                    .addComponent(lbDescription)
                    .addComponent(lbDescription1)
                    .addComponent(lbName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDescription1)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCategory))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDescription)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private DefaultComboBoxModel comboBoxModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.ras.swing.combobox.CComboBox comboCategory;
    private com.ras.swing.combobox.RComboBox comboRegion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCategory;
    private javax.swing.JLabel lbDescription;
    private javax.swing.JLabel lbDescription1;
    private javax.swing.JLabel lbName;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables


    private void initializeComboBoxRenderer() {
        getComboCategory().setRenderer(new ListCellRenderer<Category>() {
            @Override
            public Component getListCellRendererComponent(JList<? extends Category> list, Category value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel label = new JLabel();
                if (value != null) {
                    label.setText(value.categoryName());
                }
                if (isSelected) {
                    label.setBackground(list.getSelectionBackground());
                    label.setForeground(list.getSelectionForeground());
                } else {
                    label.setBackground(list.getBackground());
                    label.setForeground(list.getForeground());
                }
                label.setOpaque(true);
                return label;
            }
        });
    }

    private void setComboBox() {
        try {

            SwingWorker<ArrayList<Category>, Void> worker;
            worker = new SwingWorker<ArrayList<Category>, Void>() {

                @Override
                protected ArrayList<Category> doInBackground() throws Exception {
                    comboBoxModel.removeAllElements();

                    DatabaseOperation databaseOperation = new DatabaseOperation();
                    ArrayList<Category> categoryList = databaseOperation.getAllCategorys();
                    for (Category c : categoryList) {
                        comboBoxModel.addElement(c);
                    }

                    getComboCategory().setModel(comboBoxModel);

                    return categoryList;

                }

                @Override
                protected void done() {
                    try {
                        ArrayList<Category> result = get();
                    } catch (Exception e) {
                        e.printStackTrace();
                        Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.BOTTOM_LEFT, "404 - Error");
                    }
                }
            };

            worker.execute();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @return the comboCategory
     */
    public com.ras.swing.combobox.CComboBox getComboCategory() {
        return comboCategory;
    }

    /**
     * @param comboCategory the comboCategory to set
     */
    public void setComboCategory(com.ras.swing.combobox.CComboBox comboCategory) {
        this.comboCategory = comboCategory;
    }

    /**
     * @return the txtDescription
     */

    /**
     * @return the txtName
     */
    public javax.swing.JTextField getTxtName() {
        return txtName;
    }

    /**
     * @return the txtPrice
     */
    public javax.swing.JTextField getTxtPrice() {
        return txtPrice;
    }

    /**
     * @return the txtDescription
     */
    public javax.swing.JTextArea getTxtDescription() {
        return txtDescription;
    }
    
    



}
