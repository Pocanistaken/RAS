package com.ras.form.popup;

import com.ras.database.DatabaseOperation;
import com.ras.entity.Region;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.SwingWorker;
import raven.toast.Notifications;

public class CreateTable extends javax.swing.JPanel {

    /**
     * Creates new form CreateTable
     */
    public CreateTable() {
        initComponents();
        comboBoxModel = (DefaultComboBoxModel) comboRegion.getModel();
        setComboBox();
        initializeComboBoxRenderer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lbChairAmount = new javax.swing.JLabel();
        txtChairAmount = new javax.swing.JTextField();
        lbRegion = new javax.swing.JLabel();
        comboRegion = new com.ras.swing.combobox.RComboBox();

        lbName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbName.setText("Name");

        lbChairAmount.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbChairAmount.setText("Chair Amount");

        txtChairAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChairAmountActionPerformed(evt);
            }
        });

        lbRegion.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbRegion.setText("Region");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbChairAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtName)
                            .addComponent(txtChairAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(comboRegion, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)))
                .addContainerGap(230, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbChairAmount)
                    .addComponent(txtChairAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRegion)
                    .addComponent(comboRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtChairAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChairAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChairAmountActionPerformed

    private DefaultComboBoxModel comboBoxModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.ras.swing.combobox.RComboBox comboRegion;
    private javax.swing.JLabel lbChairAmount;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbRegion;
    private javax.swing.JTextField txtChairAmount;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the txtChairAmount
     */
    public javax.swing.JTextField getTxtChairAmount() {
        return txtChairAmount;
    }

    /**
     * @param txtChairAmount the txtChairAmount to set
     */
    public void setTxtChairAmount(javax.swing.JTextField txtChairAmount) {
        this.txtChairAmount = txtChairAmount;
    }

    /**
     * @return the txtName
     */
    public javax.swing.JTextField getTxtName() {
        return txtName;
    }

    /**
     * @param txtName the txtName to set
     */
    public void setTxtName(javax.swing.JTextField txtName) {
        this.txtName = txtName;
    }

    private void initializeComboBoxRenderer() {
        getComboRegion().setRenderer(new ListCellRenderer<Region>() {
            @Override
            public Component getListCellRendererComponent(JList<? extends Region> list, Region value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel label = new JLabel();
                if (value != null) {
                    label.setText(value.regionName());
                }
                if (isSelected) {
                    label.setBackground(list.getSelectionBackground());
                    label.setForeground(list.getSelectionForeground());
                } else {
                    label.setBackground(list.getBackground());
                    label.setForeground(list.getForeground());
                }
                label.setOpaque(true);
                return label;
            }
        });
    }

    private void setComboBox() {
        try {

            SwingWorker<ArrayList<Region>, Void> worker;
            worker = new SwingWorker<ArrayList<Region>, Void>() {

                @Override
                protected ArrayList<Region> doInBackground() throws Exception {
                    comboBoxModel.removeAllElements();

                    DatabaseOperation databaseOperation = new DatabaseOperation();
                    ArrayList<Region> regionList = databaseOperation.getAllRegions();
                    for (Region r : regionList) {
                        comboBoxModel.addElement(r);
                        System.out.println(r.regionName());
                    }

                    getComboRegion().setModel(comboBoxModel);

                    return regionList;

                }

                @Override
                protected void done() {
                    try {
                        ArrayList<Region> result = get();
                    } catch (Exception e) {
                        e.printStackTrace();
                        Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.BOTTOM_LEFT, "404 - Error");
                    }
                }
            };

            worker.execute();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @return the comboRegion
     */
    public com.ras.swing.combobox.RComboBox getComboRegion() {
        return comboRegion;
    }

    /**
     * @param comboRegion the comboRegion to set
     */
    public void setComboRegion(com.ras.swing.combobox.RComboBox comboRegion) {
        this.comboRegion = comboRegion;
    }

}
